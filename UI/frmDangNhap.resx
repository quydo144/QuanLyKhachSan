<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>